# useful site to help interpret results http://www.eilersgenomics.com/genome_quality/

################ meryl and merqury to assess assembly quality ################

best_k.sh 253300479 # genome size is largest estimate from depthsizer 
# result = kmer=18.9674
# Round up to 19

conda activate merq2_env
conda install -c conda-forge -c bioconda merqury
module load java/11
cd /srv/scratch/z5228384/RhabGenomePaper/Reads/IlluminaReads
mkdir merq
# count kmers using best kmer size
meryl k=19 count ToadRem* output merq/ToadRem.meryl threads=20
# run merqury
merqury.sh ToadRem.meryl $GENOME MERQ

################ Kmer Analysis Toolkit to assess assembly quality based on raw reads ################
# Generate kat comp spectra plot with the raw reads compared to the assembly
kat comp -t 19 -o pe_v_asm_test '/srv/scratch/z5228384/RhabGenomePaper/Reads/IlluminaReads/TrimmedReads/RhabdiasCleanPairedF.fastq.gz /srv/scratch/z5228384/RhabGenomePaper/Reads/IlluminaReads/TrimmedReads/RhabdiasCleanPairedR.fastq.gz' Step_1_assembly.fasta -p pdf
KAT=/srv/scratch/z5228384/tools/KAT-Release-2.4.1/scripts/kat
$KAT/distanalysis.py 
python $KAT/distanalysis.py pe_v_asm_test-main.mx

################ Inspector to assess longread asssembly ################

GENOME=/srv/scratch/z5228384/RhabGenomePaper/GenomeStats/Step_8_FinalTidy.diploidocus.fasta
READS=/srv/scratch/z5228384/RhabGenomePaper/Reads/ONTreads/rhabont_allreads_5000.fastq.gz
cd /srv/scratch/z5228384/RhabGenomePaper/GenomeStats/inspector
inspector.py \
    -c $GENOME \
    -r $READS \
    -o ./ \
    --datatype nanopore \
    -t 20

# on original assembly (no polishing or anything else)
GENOME=/srv/scratch/z5228384/RhabGenomePaper/PipelineSteps/fastas/Step_1_assembly.fasta
READS=/srv/scratch/z5228384/RhabGenomePaper/Reads/ONTreads/rhabont_allreads_5000.fastq.gz
cd /srv/scratch/z5228384/RhabGenomePaper/GenomeStats/inspector
inspector.py \
    -c $GENOME \
    -r $READS \
    -o ./ \
    --datatype nanopore \
    -t 20

################ Genome size estimation with Genomescope2 ################
# create conda environment for genomescope
conda create --name genomescope_env
conda activate genomescope_env
conda install -c bioconda genomescope2 kmc
conda install -c bioconda kmc
# Genomescope2 https://github.com/tbenavi1/genomescope2.0
# Genomescope requires R and some r packages
# best to just conda install R, because dont trust R on katana
conda install -c conda-forge r-base r-minpack.lm r-argparse
mkdir tmp
# we have the illumina read paths saved to a file called il_names_30.txt
# 19 was picked as kmer length based on best_k.sh script run on the estimated genome length of 253mbp
kmc -k19 -t24 -m200 -ci1 -cs10000 @il_names_30.txt reads tmp/
kmc_tools -t24 transform reads histogram reads.histo -cx10000
genomescope2 -i reads.histo -o genscopeOUT -k 19
# output
###GenomeScope analyzing reads.histo p=2 k=19 outdir=genscopeOUT
###aa:99.8% ab:0.163%
##Model converged het:0.00163 kcov:21.8 err:0.000343 model fit:1.78 len:250617132

################ Genome size estimation with Depthsizer ################
conda activate purge_haplotigs # purge_haplotigs has the necessary dependencies because it was made for diploidocus
R # these must be independently loaded each time
library(parallel)
library(RColorBrewer)
library(ggstatsplot)
library(tidyverse)
library(writexl)
#exit R
# set up the files
DEP=/srv/scratch/z5228384/tools/depthsizer/code
module load jellyfish/1.1.11 samtools python
READS=/srv/scratch/z5228384/RhabGenomePaper/Reads/ONTreads/rhabont_allreads_5000.fastq.gz
# Run depthsizer
python2 $DEP/depthsizer.py basefile=DepthSizer_Step_8 summarise=T busco=full_table.tsv reads=$READS seqin=Step_8_FinalTidy.diploidocus.fasta forks=24

# results
# SeqFile	  DepMethod	   Adjust	        ReadBP	      MapAdjust	        SCDepth	    EstGenomeSize
# Step_8	    mpileup	    None	      27638051169	    1.0               110.24	      250707329
# Step_8	    mpileup	    CovBases	  27638051169	    0.968092859963	  110.24	      242707975
# Step_8	    mpileup	    IndelRatio	27638051169	    0.989762554634	  110.24	      253300479

# Genome size is likely between 243mbp and 253mbp

################ Copy number variation with DepthKopy ################
conda activate purge_haplotigs # purge_haplotigs has the necessary dependencies because it was made for diploidocus
R # these must be independently loaded each time
library(parallel)
library(RColorBrewer)
library(ggstatsplot)
library(tidyverse)
library(writexl)
#exit R

DEP=/srv/scratch/z5228384/tools/depthkopy/code
module load jellyfish/1.1.11 samtools python
READS=/srv/scratch/z5228384/RhabGenomePaper/Reads/ONTreads/rhabont_allreads_5000.fastq.gz
# Run depthsizer
python2 $DEP/depthkopy.py basefile=DepthKopy_Step_8 summarise=T busco=full_table.tsv reads=$READS seqin=Step_8_FinalTidy.diploidocus.fasta forks=30

################ completness statistics with BUSCOMP ################

SLIM=/srv/scratch/z5228384/tools/SLiMSuite/tools
conda activate purge_haplotigs
module load python
#fasta files and busco files have both be in their own seperate directories (e,g, buscos for busco files, and fastas for fasta files) and named identical to their partners
python2 $SLIM/buscomp.py runs=./buscos/*Step* fastadir=./fastas forks=8




