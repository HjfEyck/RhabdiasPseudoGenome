# Assembling the mtDNA for Rhabdias pseudosphaerocephala

# First I wanted to use raw data that had toad reads removed and no adapters, but had NOT been quality controlled
# mtDNA assemblers seem (from my reading) to usually use truly raw reads, but I did not want to have toad reads in my data, nor adapters
# Chromodorean nematode should have all genes on the same strand of the mitogenome, and this is not true of toads
# so it will probably be easy to spot a wrongly assembled gene  
# To trim the new dataset i used trimmomatic
module load java/8u292-b10-openjdk
TRIM=/srv/scratch/z5228384/tools/Trimmomatic-0.39
java -jar $TRIM/trimmomatic-0.39.jar PE -threads 24 ToadRem_1.fastq.gz ToadRem_2.fastq.gz mtDNA_toadrem_Paired_F.fastq mtDNA_toadrem_Unpaired_F.fastq mtDNA_toadrem_Paired_R.fastq mtDNA_toadrem_Unpaired_R.fastq ILLUMINACLIP:$TRIM/adapters/TruSeq3-PE.fa/:2:30:10

module load perl python spades bowtie2 blast-plus
cd /srv/scratch/z5228384/RhabGenomePaper/mtDNA/getOrganelle
MT=/srv/scratch/z5228384/RhabGenomePaper/mtDNA/C.ElegansmtDNAsequence.fasta
IL=/srv/scratch/z5228384/RhabGenomePaper/Reads/IlluminaReads
python /srv/scratch/z5228384/tools/GetOrganelle/get_organelle_from_reads.py \
-t 16 \
-1 $IL/mtDNA_toadrem_Paired_F.fastq \
-2 $IL/mtDNA_toadrem_Paired_R.fastq \
-s $MT \
-F animal_mt \
--spades-options "--isolate " \
-o mtDNA_toadrem_adapterrem_isolate

# Then in bandage, removed low coverage artifacts, and deleted dead ends that were no identified from a blast search.
# Then merged all possible nodes, which left a single bifurcation.
# Polished with short reads try to clear up this bifurcation

#If polishing doesnt work, we went with the sequence in the bifurcation that had the greatest depth
#Then polished in an attampt to merge the sequences

bwa mem -t 30 contigs_merged.fasta ../../../../../Reads/IlluminaReads/Rhab_forward.fastq ../../../../../Reads/IlluminaReads/Rhab_reverse.fastq | samtools view -@ 30 -b - | samtools sort -@ 30 -o mapped_sorted.bam

bwa mem -t 30 DeadendsIncluded.fasta ../../../../../Reads/IlluminaReads/Rhab_forward.fastq ../../../../../Reads/IlluminaReads/Rhab_reverse.fastq | samtools view -@ 30 -b - | samtools sort -@ 30 -o mapped_sorted.bam

conda activate sspace_env # pilon is installed here
module load java/11.0.17_8-openjdk # this needs to be installed to run pilon
BAM=mapped_sorted.bam
Prefix=mitopolish
PPN=30
GENOME=contigs_merged.fasta
pilon --bam $BAM --genome $GENOME --output $PREFIX --outdir $PREFIX/ --diploid --verbose --changes --threads $PPN --fix indels 2>&1 | tee ${PREFIX}.log.tx

# generate gfa plot to see if the genome is circular
gfastats  -o gfa // converts fasta to gfa





# Method 2 with longreads
# first mapped all long reads to the Celegans mitogenome, extract only the mapped reads, then sort them
ONT=/srv/scratch/z5228384/RhabGenomePaper/Reads/ONTreads/rhabont_allreads_5000.fastq.gz
minimap2 -t 30 -a -x map-ont C.ElegansmtDNAsequence.fasta $ONT | samtools view -@ 30 -b -F 4 - | samtools sort -@ 30 -o mapped_sorted.bam -
# Then extract the mapped reads as fastq
samtools bam2fq -@ 30 mapped_sorted.bam > LongreadMito.fastq
#then use getorganelle to try to assemble these reads
MT=C.ElegansmtDNAsequence.fasta
READS=LongreadMito.fastq
get_organelle_from_reads.py \
-t 30 \
-u $READS \
-s $MT \
-F animal_mt \
-R 30 \
--spades-options "--isolate " \
-o mtDNA_longread_isolate_r30
