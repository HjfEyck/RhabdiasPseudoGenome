# Assembling the mtDNA for Rhabdias pseudosphaerocephala

# First I wanted to use raw data that had toad reads removed and no adapters, but had NOT been quality controlled
# GetOrganelle reccomends using raw reads with no adapters, but I did not want to have toad reads in my data, so i used data that had toad reads removed (created prior to genome assembly)
# To remove adapters used trimmomatic, but did not quality trim
module load java/8u292-b10-openjdk
TRIM=/srv/scratch/z5228384/tools/Trimmomatic-0.39
java -jar $TRIM/trimmomatic-0.39.jar PE -threads 24 ToadRem_1.fastq.gz ToadRem_2.fastq.gz mtDNA_toadrem_Paired_F.fastq mtDNA_toadrem_Unpaired_F.fastq mtDNA_toadrem_Paired_R.fastq mtDNA_toadrem_Unpaired_R.fastq ILLUMINACLIP:$TRIM/adapters/TruSeq3-PE.fa/:2:30:10

# This is the code used for the mitochondrial assembly
# Rhabdias kafunata was used as the seed

conda activate mtdna_env
conda install -c bioconda getorganelle
module load perl python spades bowtie2 blast-plus # dependencies needed
get_organelle_from_reads.py \
-t 30 \
-1 $IL/mtDNA_toadrem_Paired_F.fastq \
-2 $IL/mtDNA_toadrem_Paired_R.fastq \
-s $MT \
-F animal_mt \
--spades-options "--isolate " \
-o mtDNA_toadrem_adapterrem_isolate_RhabKafu

# This produced a circular genome assembly with each gene on the same strand (expected in chromodorean nematodes)

# Attempted to polish the assembly using pilon
bwa index animal_mt.K115.complete.graph1.1.path_sequence.fasta
bwa mem -t 30 animal_mt.K115.complete.graph1.1.path_sequence.fasta $IL/Rhab_forward.fastq $IL/Rhab_.fastq | samtools view -@ 30 -b - | samtools sort -@ 30 -o mapped_sorted.bam
samtools index -@ 30 mapped_sorted.bam
module load java/11.0.17_8-openjdk # this needs to be installed to run pilon
BAM=mapped_sorted.bam
Prefix=mitopolish
PPN=30
GENOME=animal_mt.K115.complete.graph1.1.path_sequence.fasta
pilon --bam $BAM --genome $GENOME --output $PREFIX --outdir $PREFIX/ --diploid --verbose --changes --threads $PPN --fix indels 2>&1 | tee ${PREFIX}.log.tx
# no changes were made by pilon

